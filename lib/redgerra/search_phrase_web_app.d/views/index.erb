<!DOCTYPE html>
<html>
  <head>
    <title>Search Phrase</title>
    <style>
      .error {
        color: red;
      }
      #searchForm {
        padding-top: 1em;
        /*padding-left: 1em;*/
        /*padding-right: 1em;*/
        padding-bottom: 2em;
      }
      #searchForm table {
        white-space: nowrap;
        border: 0;
        padding: 0;
        margin: 0;
        border-spacing: 0;
        vertical-align: middle;
      }
      #searchForm #slochInputCol {
        padding-left: 0.4em;
        padding-right: 0.2em;
      }
      #searchForm input[type=text] {
        width: 100%;
        box-sizing: border-box;         /* Opera/IE 8+ */
        -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */
        -moz-box-sizing: border-box;    /* Firefox, other Gecko */
      }
      #captchaForm {
        border: 2px solid;
        padding: 0.5em;
        display: inline-block;
      }
      #captchaForm #captchaImage {
        border: 1px solid;
      }
    </style>
  </head>
  <body>
    
    <form id="searchForm" action="index.html" method="get">
      <table>
        <tr> <td>Sloch:</td> <td id="slochInputCol" width="100%"><input id="slochInput" name="sloch" type="text" value="<%=Rack::Utils.escape_html(sloch)%>"/></td> <td><input type="submit" value="Search"/></td> </tr>
      </table>
    </form>
    
    <% if not sloch.empty? then %>

    Phrases found:
    <ul id="resultsList">
      <li id="loadingSymbol"><img src="loading.gif"/></li>
    </ul>
    <p/>
    <form id="captchaForm" action="captcha" method="post">
      To continue, please type the characters below:
      <p/>
      <img id="captchaImage" alt="Please enable images"/>
      <p/>
      <div><input id="captchaAnswer" name="answer" type="text" size="12"/> <input type="submit" value="Submit"/></div>
    </form>
    <p/>
    <a id="moreButton" href="#" class="hidden">More…</a>
    
    <script>
      
      var resultsPerPage = <%=@results_per_page%>;
      
      var slochInput = document.getElementById("slochInput");
      var resultsList = document.getElementById("resultsList");
      var loadingSymbol = document.getElementById("loadingSymbol");
      var moreButton = document.getElementById("moreButton");
      var captchaForm = document.getElementById("captchaForm");
      var captchaImage = document.getElementById("captchaImage");
      var captchaAnswer = document.getElementById("captchaAnswer");
      
      /**
       * Send request via XMLHttpRequest and process response.
       * 
       * okF: function(responseText).
       * errorF: function(statusCode, responseText, isNetworkingError).
       */
      function request(method, query, okF, errorF) {
        req = (function() {
          if (window.XMLHttpRequest) {
              try {
                  return new XMLHttpRequest();
              } catch (e){}
          } else if (window.ActiveXObject) {
              try {
                  return new ActiveXObject('Msxml2.XMLHTTP');
              } catch (e){
                  try {
                      return new ActiveXObject('Microsoft.XMLHTTP');
                  } catch (e){}
              }
          }
          throw "Please update your browser";
        })();
        req.open(method, query, true);
        req.onreadystatechange = function() {
          try {
            if (req.readyState == 4) {
              if (req.status == 200) {
                okF(req.responseText);
              } else {
                errorF(req.status, req.response, req.status == 0);
              }
            }
          }
          catch( e ) {
            // Workaround for Bugzilla Bug 238559 XMLHttpRequest needs a way to report networking errors
            // https://bugzilla.mozilla.org/show_bug.cgi?id=238559
            errorF(0, "", true);
          }
        };
        req.send(null);
      }
      
      function show(node) {
        node.style.display = "";
      }
      
      function hide(node) {
        node.style.display = "none";
      }
      
      function addNodeToResultsList(li) {
        resultsList.insertBefore(li, loadingSymbol);
      }
      
      function addTextItemToResultsList(text) {
        var li = document.createElement("li");
        var text = document.createTextNode(text);
        li.appendChild(text);
        addNodeToResultsList(li);
      }
      
      function addHTMLItemToResultsList(html) {
        var li = document.createElement("li");
        li.innerHTML = html;
        addNodeToResultsList(li);
      }
      
      function sloch() {
        return slochInput.value;
      }
      
      var currentIndex = 0;
      
      /**
       * The same as more_() but with <code>beforeRequests</code> doing nothing
       * (just calling <code>cont</code> passed to it).
       */
      function more() {
        more_(function(cont) { cont(); });
      }
      
      /**
       * @param beforeRequests is a function which is called right before any
       * request to the server. It is passed with a function
       * <code>cont</code> and it must call <code>cont</code>
       * with no arguments after it has finished.
       * 
       * Example:
       * <pre>
       * more_(function(cont) { doSomeStuff(); cont(); });
       * </pre>
       */
      function more_(beforeRequests) {
        // Utils.
        function hasNoMorePhrases(responseText) {
          return responseText == "";
        }
        // Implementation.
        hide(moreButton);
        hide(captchaForm);
        show(loadingSymbol);
        var stopIndex = currentIndex + resultsPerPage;
        var loop = function() {
          request(
            "GET",
            "phrase?sloch=" + encodeURIComponent(sloch()) + "&offset=" + currentIndex.toString(),
            /* okF */ function(responseText) {
              if (hasNoMorePhrases(responseText)) {
                hide(loadingSymbol);
                if (currentIndex == 0) {
                  addTextItemToResultsList("(none)");
                }
              }
              else {
                var phrase = responseText;
                addTextItemToResultsList(phrase);
                currentIndex++;
                if (currentIndex == stopIndex) {
                  hide(loadingSymbol);
                  show(moreButton);
                }
                else {
                  loop();
                }
              }
            },
            /* errorF */ function(statusCode, responseText, isNetworkingError) {
              hide(loadingSymbol);
              if (isNetworkingError) {
                addHTMLItemToResultsList('<span class="error">Networking error</span>');
              }
              else {
                if (statusCode == 503 && responseText == "Server asks captcha") {
                  captchaImage.src = "captcha?sloch=" + encodeURIComponent(sloch()) + "&" + new Date().getTime();
                  captchaAnswer.value = "";
                  hide(loadingSymbol);
                  show(captchaForm);
                }
                else {
                  addHTMLItemToResultsList('<span class="error">Error: ' + statusCode.toString() + '—' + responseText + '</span>');
                }
              }
            }
          );
        };
        //
        beforeRequests(loop);
      }
      
      moreButton.onclick = function(event) {
        more();
        event.preventDefault();
      }
      
      captchaForm.onsubmit = function(event) {
        more_(function(cont) {
          request(
            "POST",
            "captcha?sloch=" + encodeURIComponent(sloch()) + "&answer=" + encodeURIComponent(captchaAnswer.value),
            /* okF */ function(responseText) {
              cont();
            },
            /* errorF */ function(statusCode, responseText, isNetworkingError) {
              cont();
            }
          );
        });
        event.preventDefault();
      }
      
      more();
      
    </script>

    <% else %>
    
    <div class="credits">
      <!-- TODO: Use CSS here instead of ad-hoc tags. -->
      <center><small><a href="https://github.com/LavirtheWhiolet/search-phrase">Source code</a> | <a href="mailto:Lavir.th.Whiolet@gmail.com">Contact me</a></small></center>
    </div>
    
    <% end %>
    
  </body>
</html>
